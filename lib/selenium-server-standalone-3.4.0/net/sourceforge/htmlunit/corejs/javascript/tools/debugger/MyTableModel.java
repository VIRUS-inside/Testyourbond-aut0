package net.sourceforge.htmlunit.corejs.javascript.tools.debugger;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.table.AbstractTableModel;
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































class MyTableModel
  extends AbstractTableModel
{
  private static final long serialVersionUID = 2971618907207577000L;
  private SwingGui debugGui;
  private List<String> expressions;
  private List<String> values;
  
  public MyTableModel(SwingGui debugGui)
  {
    this.debugGui = debugGui;
    expressions = Collections.synchronizedList(new ArrayList());
    values = Collections.synchronizedList(new ArrayList());
    expressions.add("");
    values.add("");
  }
  


  public int getColumnCount()
  {
    return 2;
  }
  


  public int getRowCount()
  {
    return expressions.size();
  }
  



  public String getColumnName(int column)
  {
    switch (column) {
    case 0: 
      return "Expression";
    case 1: 
      return "Value";
    }
    return null;
  }
  



  public boolean isCellEditable(int row, int column)
  {
    return true;
  }
  


  public Object getValueAt(int row, int column)
  {
    switch (column) {
    case 0: 
      return expressions.get(row);
    case 1: 
      return values.get(row);
    }
    return "";
  }
  



  public void setValueAt(Object value, int row, int column)
  {
    switch (column) {
    case 0: 
      String expr = value.toString();
      expressions.set(row, expr);
      String result = "";
      if (expr.length() > 0) {
        result = debugGui.dim.eval(expr);
        if (result == null)
          result = "";
      }
      values.set(row, result);
      updateModel();
      if (row + 1 == expressions.size()) {
        expressions.add("");
        values.add("");
        fireTableRowsInserted(row + 1, row + 1);
      }
      
      break;
    case 1: 
      fireTableDataChanged();
    }
    
  }
  

  void updateModel()
  {
    for (int i = 0; i < expressions.size(); i++) {
      String expr = (String)expressions.get(i);
      String result = "";
      if (expr.length() > 0) {
        result = debugGui.dim.eval(expr);
        if (result == null)
          result = "";
      } else {
        result = "";
      }
      result = result.replace('\n', ' ');
      values.set(i, result);
    }
    fireTableDataChanged();
  }
}
