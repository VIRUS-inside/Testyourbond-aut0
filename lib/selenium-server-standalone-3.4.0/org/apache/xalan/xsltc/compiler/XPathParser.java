package org.apache.xalan.xsltc.compiler;

import java.util.Stack;
import java.util.Vector;
import java_cup.runtime.Scanner;
import java_cup.runtime.Symbol;
import java_cup.runtime.lr_parser;
import org.apache.xalan.xsltc.compiler.util.ErrorMsg;












public class XPathParser
  extends lr_parser
{
  public XPathParser() {}
  
  public XPathParser(Scanner s)
  {
    super(s);
  }
  
  protected static final short[][] _production_table = unpackFromStrings(new String[] { "\000\000\002\002\004\000\002\003\004\000\002\003\004\000\002\036\003\000\002\036\005\000\002\037\003\000\002\037\004\000\002\037\003\000\002\037\005\000\002\037\005\000\002\037\004\000\002\037\003\000\002\035\006\000\002\035\b\000\002 \006\000\002!\003\000\002!\005\000\002!\005\000\002\"\003\000\002\"\004\000\002\"\003\000\002\"\004\000\002\"\004\000\002\"\005\000\002\"\004\000\002\"\005\000\002#\003\000\002#\003\000\002#\003\000\002#\003\000\002#\003\000\002$\003\000\002$\003\000\002,\003\000\002,\004\000\002,\004\000\002%\003\000\002%\004\000\002\007\005\000\002\004\003\000\002\n\003\000\002\n\005\000\002\013\003\000\002\013\005\000\002\f\003\000\002\f\005\000\002\f\005\000\002\r\003\000\002\r\005\000\002\r\005\000\002\r\005\000\002\r\005\000\002\016\003\000\002\016\005\000\002\016\005\000\002\017\003\000\002\017\005\000\002\017\005\000\002\017\005\000\002\020\003\000\002\020\004\000\002\024\003\000\002\024\005\000\002\025\003\000\002\025\003\000\002\025\005\000\002\025\005\000\002\006\003\000\002\006\003\000\002\027\003\000\002\027\005\000\002\027\003\000\002\031\003\000\002\031\004\000\002\031\003\000\002\030\005\000\002\032\004\000\002\t\003\000\002\t\004\000\002\t\005\000\002\t\004\000\002\t\003\000\002+\004\000\002+\003\000\002*\003\000\002*\003\000\002*\003\000\002*\003\000\002*\003\000\002*\003\000\002*\003\000\002*\003\000\002*\003\000\002*\003\000\002*\003\000\002*\003\000\002*\003\000\002\026\003\000\002\026\003\000\002\b\003\000\002\b});
  












































  public short[][] production_table()
  {
    return _production_table;
  }
  
  protected static final short[][] _action_table = unpackFromStrings(new String[] { "\000Ç\000\0067\0068\005\001\002\000\004\002É\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\0008\004\013\013\027\016\020\021\023\032\031\033 \036\034\037\033 &!'\")%\r&\f'\016(\036)\037*$+\025,(-#.!/\0350\0301%2\0213\n4\"\001\002\000\006\002￾\bÆ\001\002\000\004\002\000\001\002\000\f\002￧\004￧\006￧\b￧\021￧\001\002\000,\002ｺ\004ｺ\006ｺ\007ｺ\bｺ\nｺ\fｺ\021ｺ\022ｺ\023ｺ\024ｺ\025ｺ\026ｺ\027ｺ\030ｺ\031ｺ\032ｺ\033ｺ\034ｺ#ｺ$ｺ\001\002\0008\002￼\b￼\013\027\016\020\032\031\033 \036\034\037K a!'\")%\r&\f'\016(\036)\037*$+\025,(-#.!/\0350\0301%2\0213\n4\"\001\002\000\f\002￣\004￣\006￣\b￣\021￣\001\002\000\f\002￤\004￤\006￤\b￤\021￤\001\002\000\004\tÂ\001\002\000\n\002￺\004¿\b￺\021¾\001\002\0002\013￠\032￠\033￠\036￠\037￠ ￠!￠\"￠%￠&￠'￠(￠)￠*￠+￠,￠-￠.￠/￠0￠1￠2￠3￠4￠\001\002\000,\002ｻ\004ｻ\006ｻ\007ｻ\bｻ\nｻ\fｻ\021ｻ\022ｻ\023ｻ\024ｻ\025ｻ\026ｻ\027ｻ\030ｻ\031ｻ\032ｻ\033ｻ\034ｻ#ｻ$ｻ\001\002\0002\013\027\032\031\033 \036\034\037K a!'\")%\r&\f'\016(\036)\037*$+x,v-#.!/\0350\0301%2\0213\n4\"\001\002\0004\013\027\016\020\032\031\033 \036\034\037K a!'\")%\r&\f'\016(\036)\037*$+\025,(-#.!/\0350\0301%2\0213\n4\"\001\002\000\n\002￲\004¶\b￲\021µ\001\002\000\016\002ｿ\004ｿ\006ｿ\bｿ\020´\021ｿ\001\002\000\006\002￶\b￶\001\002\000\f\002￢\004￢\006￢\b￢\021￢\001\002\000,\002ｽ\004ｽ\006ｽ\007ｽ\bｽ\nｽ\fｽ\021ｽ\022ｽ\023ｽ\024ｽ\025ｽ\026ｽ\027ｽ\030ｽ\031ｽ\032ｽ\033ｽ\034ｽ#ｽ$ｽ\001\002\000.\002ﾅ\004ﾅ\006ﾅ\007ﾅ\bﾅ\tﾅ\nﾅ\fﾅ\021ﾅ\022ﾅ\023ﾅ\024ﾅ\025ﾅ\026ﾅ\027ﾅ\030ﾅ\031ﾅ\032ﾅ\033ﾅ\034ﾅ#ﾅ$ﾅ\001\002\000\f\002￭\004￭\006-\b￭\021￭\001\002\000\016\002ｵ\004ｵ\006ｵ\bｵ\t°\021ｵ\001\002\000.\002ﾆ\004ﾆ\006ﾆ\007ﾆ\bﾆ\tﾆ\nﾆ\fﾆ\021ﾆ\022ﾆ\023ﾆ\024ﾆ\025ﾆ\026ﾆ\027ﾆ\030ﾆ\031ﾆ\032ﾆ\033ﾆ\034ﾆ#ﾆ$ﾆ\001\002\000,\002ｾ\004ｾ\006ｾ\007ｾ\bｾ\nｾ\fｾ\021ｾ\022ｾ\023ｾ\024ｾ\025ｾ\026ｾ\027ｾ\030ｾ\031ｾ\032ｾ\033ｾ\034ｾ#ｾ$ｾ\001\002\000,\002ｷ\004ｷ\006ｷ\007ｷ\bｷ\nｷ\fｷ\021ｷ\022ｷ\023ｷ\024ｷ\025ｷ\026ｷ\027ｷ\030ｷ\031ｷ\032ｷ\033ｷ\034ｷ#ｷ$ｷ\001\002\000,\002ｶ\004ｶ\006ｶ\007ｶ\bｶ\nｶ\fｶ\021ｶ\022ｶ\023ｶ\024ｶ\025ｶ\026ｶ\027ｶ\030ｶ\031ｶ\032ｶ\033ｶ\034ｶ#ｶ$ｶ\001\002\000.\002ﾄ\004ﾄ\006ﾄ\007ﾄ\bﾄ\tﾄ\nﾄ\fﾄ\021ﾄ\022ﾄ\023ﾄ\024ﾄ\025ﾄ\026ﾄ\027ﾄ\030ﾄ\031ﾄ\032ﾄ\033ﾄ\034ﾄ#ﾄ$ﾄ\001\002\000,\002ﾁ\004ﾁ\006ﾁ\007ﾁ\bﾁ\nﾁ\fﾁ\021ﾁ\022ﾁ\023ﾁ\024ﾁ\025ﾁ\026ﾁ\027ﾁ\030ﾁ\031ﾁ\032ﾁ\033ﾁ\034ﾁ#ﾁ$ﾁ\001\002\000,\002ｸ\004ｸ\006ｸ\007ｸ\bｸ\nｸ\fｸ\021ｸ\022ｸ\023ｸ\024ｸ\025ｸ\026ｸ\027ｸ\030ｸ\031ｸ\032ｸ\033ｸ\034ｸ#ｸ$ｸ\001\002\000,\002ﾂ\004ﾂ\006ﾂ\007ﾂ\bﾂ\nﾂ\fﾂ\021ﾂ\022ﾂ\023ﾂ\024ﾂ\025ﾂ\026ﾂ\027ﾂ\030ﾂ\031ﾂ\032ﾂ\033ﾂ\034ﾂ#ﾂ$ﾂ\001\002\000,\002ｹ\004ｹ\006ｹ\007ｹ\bｹ\nｹ\fｹ\021ｹ\022ｹ\023ｹ\024ｹ\025ｹ\026ｹ\027ｹ\030ｹ\031ｹ\032ｹ\033ｹ\034ｹ#ｹ$ｹ\001\002\000,\002ｼ\004ｼ\006ｼ\007ｼ\bｼ\nｼ\fｼ\021ｼ\022ｼ\023ｼ\024ｼ\025ｼ\026ｼ\027ｼ\030ｼ\031ｼ\032ｼ\033ｼ\034ｼ#ｼ$ｼ\001\002\000\016\002ﾃ\004ﾃ\006ﾃ\bﾃ\t«\021ﾃ\001\002\000\f\002￥\004￥\006￥\b￥\021￥\001\002\000\016\002ﾀ\004ﾀ\006ﾀ\bﾀ\020ª\021ﾀ\001\002\000\f\002￦\004￦\006￦\b￦\021￦\001\002\000\f\002￡\004￡\006￡\b￡\021￡\001\002\000\f\002￯\004￯\006-\b￯\021￯\001\002\000,\002￝\004￝\006-\007￝\b￝\n￝\f￝\021￝\022￝\023￝\024￝\025￝\026￝\027￝\030￝\031￝\032￝\033￝\034￝#￝$￝\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000\n\002￮\004￮\b￮\021￮\001\002\000,\002ﾚ\004ﾚ\006ﾚ\007ﾚ\bﾚ\nﾚ\fﾚ\021ﾚ\022ﾚ\023ﾚ\024ﾚ\025ﾚ\026ﾚ\027ﾚ\030ﾚ\031ﾚ\032ﾚ\033ﾚ\034ﾚ#ﾚ$ﾚ\001\002\0000\002ｺ\004ｺ\006ｺ\007ｺ\bｺ\tｺ\nｺ\fｺ\020ﾥ\021ｺ\022ｺ\023ｺ\024ｺ\025ｺ\026ｺ\027ｺ\030ｺ\031ｺ\032ｺ\033ｺ\034ｺ#ｺ$ｺ\001\002\000X\002ﾹ\005I\007ﾹ\bﾹ\nﾹ\013C\fﾹ\0166\017F\022ﾹ\023ﾹ\024ﾹ\025ﾹ\026ﾹ\027ﾹ\030ﾹ\031ﾹ\032\031\033 \034ﾹ\036\034\037K a!b\"e#ﾹ$ﾹ%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W\001\002\000,\002ﾉ\004ﾉ\006ﾉ\007ﾉ\bﾉ\nﾉ\fﾉ\021ﾉ\022ﾉ\023ﾉ\024ﾉ\025ﾉ\026ﾉ\027ﾉ\030ﾉ\031ﾉ\032ﾉ\033ﾉ\034ﾉ#ﾉ$ﾉ\001\002\000,\002ﾋ\004ﾋ\006ﾋ\007ﾋ\bﾋ\nﾋ\fﾋ\021ﾋ\022ﾋ\023ﾋ\024ﾋ\025ﾋ\026ﾋ\027ﾋ\030ﾋ\031ﾋ\032ﾋ\033ﾋ\034ﾋ#ﾋ$ﾋ\001\002\000\032\002ￕ\007ￕ\nￕ\fￕ\022ￕ\023ￕ\024\025\026\027#ￕ$ￕ\001\002\000\004\t¥\001\002\0002\013ﾮ\032ﾮ\033ﾮ\036ﾮ\037ﾮ ﾮ!ﾮ\"ﾮ%ﾮ&ﾮ'ﾮ(ﾮ)ﾮ*ﾮ+ﾮ,ﾮ-ﾮ.ﾮ/ﾮ0ﾮ1ﾮ2ﾮ3ﾮ4ﾮ\001\002\0000\002ｻ\004ｻ\006ｻ\007ｻ\bｻ\tｻ\nｻ\fｻ\020ﾦ\021ｻ\022ｻ\023ｻ\024ｻ\025ｻ\026ｻ\027ｻ\030ｻ\031ｻ\032ｻ\033ｻ\034ｻ#ｻ$ｻ\001\002\0008\005I\013C\0166\017F\032\031\033 \036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000,\002ﾙ\004ﾙ\006ﾙ\007ﾙ\bﾙ\nﾙ\fﾙ\021ﾙ\022ﾙ\023ﾙ\024ﾙ\025ﾙ\026ﾙ\027ﾙ\030ﾙ\031ﾙ\032ﾙ\033ﾙ\034ﾙ#ﾙ$ﾙ\001\002\000&\002ﾷ\007ﾷ\bﾷ\nﾷ\fﾷ\022ﾷ\023ﾷ\024ﾷ\025ﾷ\026ﾷ\027ﾷ\030ﾷ\031ﾷ\032ﾷ\033ﾷ\034ﾷ#ﾷ$ﾷ\001\002\000,\002ﾗ\004ﾗ\006ﾗ\007ﾗ\bﾗ\nﾗ\fﾗ\021ﾗ\022ﾗ\023ﾗ\024ﾗ\025ﾗ\026ﾗ\027ﾗ\030ﾗ\031ﾗ\032ﾗ\033ﾗ\034ﾗ#ﾗ$ﾗ\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000\016\002￙\007￙\n￙\f￙#￙$\001\002\0000\002ｿ\004ｿ\006ｿ\007ｿ\bｿ\tｿ\nｿ\fｿ\020ﾪ\021ｿ\022ｿ\023ｿ\024ｿ\025ｿ\026ｿ\027ｿ\030ｿ\031ｿ\032ｿ\033ｿ\034ｿ#ｿ$ｿ\001\002\0002\013C\032\031\033 \036\034\037K a!b\"e%3&2'5(\036)\037*$+x,v-#.!/\0350\0301%2\0213\n4\"\001\002\000\004\020\001\002\000\f\002ￚ\007ￚ\nￚ\fￚ#\001\002\000,\002ﾈ\004ﾈ\006ﾈ\007ﾈ\bﾈ\nﾈ\fﾈ\021ﾈ\022ﾈ\023ﾈ\024ﾈ\025ﾈ\026ﾈ\027ﾈ\030ﾈ\031ﾈ\032ﾈ\033ﾈ\034ﾈ#ﾈ$ﾈ\001\002\0000\002ｽ\004ｽ\006ｽ\007ｽ\bｽ\tｽ\nｽ\fｽ\020ﾨ\021ｽ\022ｽ\023ｽ\024ｽ\025ｽ\026ｽ\027ｽ\030ｽ\031ｽ\032ｽ\033ｽ\034ｽ#ｽ$ｽ\001\002\000\022\002ￗ\007ￗ\nￗ\fￗ\022\023#ￗ$ￗ\001\002\000*\002ﾟ\004ﾟ\007ﾟ\bﾟ\nﾟ\fﾟ\021ﾟ\022ﾟ\023ﾟ\024ﾟ\025ﾟ\026ﾟ\027ﾟ\030ﾟ\031ﾟ\032ﾟ\033ﾟ\034ﾟ#ﾟ$ﾟ\001\002\000,\002ﾴ\004ﾴ\006-\007ﾴ\bﾴ\nﾴ\fﾴ\021ﾴ\022ﾴ\023ﾴ\024ﾴ\025ﾴ\026ﾴ\027ﾴ\030ﾴ\031ﾴ\032ﾴ\033ﾴ\034ﾴ#ﾴ$ﾴ\001\002\000&\002ﾽ\007ﾽ\bﾽ\nﾽ\fﾽ\022ﾽ\023ﾽ\024ﾽ\025ﾽ\026ﾽ\027ﾽ\030ﾽ\031ﾽ\032ﾽ\033ﾽ\034ﾽ#ﾽ$ﾽ\001\002\000*\002ﾠ\004ﾠ\007ﾠ\bﾠ\nﾠ\fﾠ\021ﾠ\022ﾠ\023ﾠ\024ﾠ\025ﾠ\026ﾠ\027ﾠ\030ﾠ\031ﾠ\032ﾠ\033ﾠ\034ﾠ#ﾠ$ﾠ\001\002\000\036\002ￒ\007ￒ\nￒ\fￒ\022ￒ\023ￒ\024ￒ\025ￒ\026ￒ\027ￒ\030\031#ￒ$ￒ\001\002\000.\002ｵ\004ｵ\006ｵ\007ｵ\bｵ\tｵ\nｵ\fｵ\021ｵ\022ｵ\023ｵ\024ｵ\025ｵ\026ｵ\027ｵ\030ｵ\031ｵ\032ｵ\033ｵ\034ｵ#ｵ$ｵ\001\002\000$\002ￊ\007ￊ\nￊ\fￊ\022ￊ\023ￊ\024ￊ\025ￊ\026ￊ\027ￊ\030ￊ\031ￊ\032ￊ\033ￊ\034ￊ#ￊ$ￊ\001\002\0000\002ｷ\004ｷ\006ｷ\007ｷ\bｷ\tｷ\nｷ\fｷ\020ﾢ\021ｷ\022ｷ\023ｷ\024ｷ\025ｷ\026ｷ\027ｷ\030ｷ\031ｷ\032ｷ\033ｷ\034ｷ#ｷ$ｷ\001\002\0000\002ｾ\004ｾ\006ｾ\007ｾ\bｾ\tｾ\nｾ\fｾ\020ﾩ\021ｾ\022ｾ\023ｾ\024ｾ\025ｾ\026ｾ\027ｾ\030ｾ\031ｾ\032ｾ\033ｾ\034ｾ#ｾ$ｾ\001\002\000\004\t\001\002\000*\002ﾼ\004ﾼ\007ﾼ\bﾼ\nﾼ\fﾼ\021ﾼ\022ﾼ\023ﾼ\024ﾼ\025ﾼ\026ﾼ\027ﾼ\030ﾼ\031ﾼ\032ﾼ\033ﾼ\034ﾼ#ﾼ$ﾼ\001\002\000&\002ￂ\007ￂ\bￂ\nￂ\fￂ\022ￂ\023ￂ\024ￂ\025ￂ\026ￂ\027ￂ\030ￂ\031ￂ\032ￂ\033ￂ\034ￂ#ￂ$ￂ\001\002\000,\002ﾞ\004ﾞ\006-\007ﾞ\bﾞ\nﾞ\fﾞ\021ﾞ\022ﾞ\023ﾞ\024ﾞ\025ﾞ\026ﾞ\027ﾞ\030ﾞ\031ﾞ\032ﾞ\033ﾞ\034ﾞ#ﾞ$ﾞ\001\002\0000\002ｶ\004ｶ\006ｶ\007ｶ\bｶ\tｶ\nｶ\fｶ\020ﾡ\021ｶ\022ｶ\023ｶ\024ｶ\025ｶ\026ｶ\027ｶ\030ｶ\031ｶ\032ｶ\033ｶ\034ｶ#ｶ$ｶ\001\002\000&\002ￄ\007ￄ\b~\nￄ\fￄ\022ￄ\023ￄ\024ￄ\025ￄ\026ￄ\027ￄ\030ￄ\031ￄ\032ￄ\033ￄ\034ￄ#ￄ$ￄ\001\002\0000\002ﾁ\004ﾁ\006ﾁ\007ﾁ\bﾁ\tﾁ\nﾁ\fﾁ\020ﾬ\021ﾁ\022ﾁ\023ﾁ\024ﾁ\025ﾁ\026ﾁ\027ﾁ\030ﾁ\031ﾁ\032ﾁ\033ﾁ\034ﾁ#ﾁ$ﾁ\001\002\000,\002ﾜ\004ﾜ\006ﾜ\007ﾜ\bﾜ\nﾜ\fﾜ\021ﾜ\022ﾜ\023ﾜ\024ﾜ\025ﾜ\026ﾜ\027ﾜ\030ﾜ\031ﾜ\032ﾜ\033ﾜ\034ﾜ#ﾜ$ﾜ\001\002\0000\002ｸ\004ｸ\006ｸ\007ｸ\bｸ\tｸ\nｸ\fｸ\020ﾣ\021ｸ\022ｸ\023ｸ\024ｸ\025ｸ\026ｸ\027ｸ\030ｸ\031ｸ\032ｸ\033ｸ\034ｸ#ｸ$ｸ\001\002\000*\002￁\004{\007￁\b￁\n￁\f￁\021z\022￁\023￁\024￁\025￁\026￁\027￁\030￁\031￁\032￁\033￁\034￁#￁$￁\001\002\0000\002ﾂ\004ﾂ\006ﾂ\007ﾂ\bﾂ\tﾂ\nﾂ\fﾂ\020ﾭ\021ﾂ\022ﾂ\023ﾂ\024ﾂ\025ﾂ\026ﾂ\027ﾂ\030ﾂ\031ﾂ\032ﾂ\033ﾂ\034ﾂ#ﾂ$ﾂ\001\002\000,\002ﾘ\004ﾘ\006ﾘ\007ﾘ\bﾘ\nﾘ\fﾘ\021ﾘ\022ﾘ\023ﾘ\024ﾘ\025ﾘ\026ﾘ\027ﾘ\030ﾘ\031ﾘ\032ﾘ\033ﾘ\034ﾘ#ﾘ$ﾘ\001\002\000\004\007y\001\002\000&\032\031\033 \036\034\037K a(\036)\037*$+x,v-#.!/\0350\0301%2\0213\n4\"\001\002\000*\002ﾺ\004ﾺ\007ﾺ\bﾺ\nﾺ\fﾺ\021ﾺ\022ﾺ\023ﾺ\024ﾺ\025ﾺ\026ﾺ\027ﾺ\030ﾺ\031ﾺ\032ﾺ\033ﾺ\034ﾺ#ﾺ$ﾺ\001\002\0000\002ｹ\004ｹ\006ｹ\007ｹ\bｹ\tｹ\nｹ\fｹ\020ﾤ\021ｹ\022ｹ\023ｹ\024ｹ\025ｹ\026ｹ\027ｹ\030ｹ\031ｹ\032ｹ\033ｹ\034ｹ#ｹ$ｹ\001\002\000*\002ﾰ\004ﾰ\007ﾰ\bﾰ\nﾰ\fﾰ\021ﾰ\022ﾰ\023ﾰ\024ﾰ\025ﾰ\026ﾰ\027ﾰ\030ﾰ\031ﾰ\032ﾰ\033ﾰ\034ﾰ#ﾰ$ﾰ\001\002\0000\002ｼ\004ｼ\006ｼ\007ｼ\bｼ\tｼ\nｼ\fｼ\020ﾧ\021ｼ\022ｼ\023ｼ\024ｼ\025ｼ\026ｼ\027ｼ\030ｼ\031ｼ\032ｼ\033ｼ\034ｼ#ｼ$ｼ\001\002\000.\002ﾃ\004ﾃ\006ﾃ\007ﾃ\bﾃ\tﾃ\nﾃ\fﾃ\021ﾃ\022ﾃ\023ﾃ\024ﾃ\025ﾃ\026ﾃ\027ﾃ\030ﾃ\031ﾃ\032ﾃ\033ﾃ\034ﾃ#ﾃ$ﾃ\001\002\000,\002ﾌ\004ﾌ\006ﾌ\007ﾌ\bﾌ\nﾌ\fﾌ\021ﾌ\022ﾌ\023ﾌ\024ﾌ\025ﾌ\026ﾌ\027ﾌ\030ﾌ\031ﾌ\032ﾌ\033ﾌ\034ﾌ#ﾌ$ﾌ\001\002\0000\002ﾀ\004ﾀ\006ﾀ\007ﾀ\bﾀ\tﾀ\nﾀ\fﾀ\020ﾫ\021ﾀ\022ﾀ\023ﾀ\024ﾀ\025ﾀ\026ﾀ\027ﾀ\030ﾀ\031ﾀ\032ﾀ\033ﾀ\034ﾀ#ﾀ$ﾀ\001\002\000$\002ￆ\007ￆ\nￆ\fￆ\022ￆ\023ￆ\024ￆ\025ￆ\026ￆ\027ￆ\030ￆ\031ￆ\032ￆ\033ￆ\034ￆ#ￆ$ￆ\001\002\000,\002ﾍ\004ﾍ\006ﾍ\007ﾍ\bﾍ\nﾍ\fﾍ\021ﾍ\022ﾍ\023ﾍ\024ﾍ\025ﾍ\026ﾍ\027ﾍ\030ﾍ\031ﾍ\032ﾍ\033ﾍ\034ﾍ#ﾍ$ﾍ\001\002\000$\002ￍ\007ￍ\nￍ\fￍ\022ￍ\023ￍ\024ￍ\025ￍ\026ￍ\027ￍ\030ￍ\031ￍ\032q\033o\034p#ￍ$ￍ\001\002\000*\002ﾾ\004k\007ﾾ\bﾾ\nﾾ\fﾾ\021j\022ﾾ\023ﾾ\024ﾾ\025ﾾ\026ﾾ\027ﾾ\030ﾾ\031ﾾ\032ﾾ\033ﾾ\034ﾾ#ﾾ$ﾾ\001\002\000,\002ﾎ\004ﾎ\006ﾎ\007ﾎ\bﾎ\nﾎ\fﾎ\021ﾎ\022ﾎ\023ﾎ\024ﾎ\025ﾎ\026ﾎ\027ﾎ\030ﾎ\031ﾎ\032ﾎ\033ﾎ\034ﾎ#ﾎ$ﾎ\001\002\000.\002ﾇ\004ﾇ\006ﾇ\007ﾇ\bﾇ\tﾑ\nﾇ\fﾇ\021ﾇ\022ﾇ\023ﾇ\024ﾇ\025ﾇ\026ﾇ\027ﾇ\030ﾇ\031ﾇ\032ﾇ\033ﾇ\034ﾇ#ﾇ$ﾇ\001\002\0008\005I\013C\0166\017F\032\031\033 \036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W\001\002\0008\005I\013C\0166\017F\032\031\033 \036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W\001\002\000,\002ﾇ\004ﾇ\006ﾇ\007ﾇ\bﾇ\nﾇ\fﾇ\021ﾇ\022ﾇ\023ﾇ\024ﾇ\025ﾇ\026ﾇ\027ﾇ\030ﾇ\031ﾇ\032ﾇ\033ﾇ\034ﾇ#ﾇ$ﾇ\001\002\000*\002ﾻ\004ﾻ\007ﾻ\bﾻ\nﾻ\fﾻ\021ﾻ\022ﾻ\023ﾻ\024ﾻ\025ﾻ\026ﾻ\027ﾻ\030ﾻ\031ﾻ\032ﾻ\033ﾻ\034ﾻ#ﾻ$ﾻ\001\002\000*\002ﾶ\004ﾶ\007ﾶ\bﾶ\nﾶ\fﾶ\021ﾶ\022ﾶ\023ﾶ\024ﾶ\025ﾶ\026ﾶ\027ﾶ\030ﾶ\031ﾶ\032ﾶ\033ﾶ\034ﾶ#ﾶ$ﾶ\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000$\002￈\007￈\n￈\f￈\022￈\023￈\024￈\025￈\026￈\027￈\030￈\031￈\032￈\033￈\034￈#￈$￈\001\002\000$\002￉\007￉\n￉\f￉\022￉\023￉\024￉\025￉\026￉\027￉\030￉\031￉\032￉\033￉\034￉#￉$￉\001\002\000$\002ￇ\007ￇ\nￇ\fￇ\022ￇ\023ￇ\024ￇ\025ￇ\026ￇ\027ￇ\030ￇ\031ￇ\032ￇ\033ￇ\034ￇ#ￇ$ￇ\001\002\000,\002ﾐ\004ﾐ\006ﾐ\007ﾐ\bﾐ\nﾐ\fﾐ\021ﾐ\022ﾐ\023ﾐ\024ﾐ\025ﾐ\026ﾐ\027ﾐ\030ﾐ\031ﾐ\032ﾐ\033ﾐ\034ﾐ#ﾐ$ﾐ\001\002\000,\002ﾀ\004ﾀ\006ﾀ\007ﾀ\bﾀ\nﾀ\fﾀ\021ﾀ\022ﾀ\023ﾀ\024ﾀ\025ﾀ\026ﾀ\027ﾀ\030ﾀ\031ﾀ\032ﾀ\033ﾀ\034ﾀ#ﾀ$ﾀ\001\002\000,\002ﾖ\004ﾖ\006ﾖ\007ﾖ\bﾖ\nﾖ\fﾖ\021ﾖ\022ﾖ\023ﾖ\024ﾖ\025ﾖ\026ﾖ\027ﾖ\030ﾖ\031ﾖ\032ﾖ\033ﾖ\034ﾖ#ﾖ$ﾖ\001\002\000,\002ｿ\004ｿ\006ｿ\007ｿ\bｿ\nｿ\fｿ\021ｿ\022ｿ\023ｿ\024ｿ\025ｿ\026ｿ\027ｿ\030ｿ\031ｿ\032ｿ\033ｿ\034ｿ#ｿ$ｿ\001\002\000,\002ￛ\004ￛ\006ￛ\007ￛ\bￛ\nￛ\fￛ\021ￛ\022ￛ\023ￛ\024ￛ\025ￛ\026ￛ\027ￛ\030ￛ\031ￛ\032ￛ\033ￛ\034ￛ#ￛ$ￛ\001\002\0008\005I\013C\0166\017F\032\031\033 \036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W\001\002\0008\005I\013C\0166\017F\032\031\033 \036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W\001\002\000*\002￀\004k\007￀\b￀\n￀\f￀\021j\022￀\023￀\024￀\025￀\026￀\027￀\030￀\031￀\032￀\033￀\034￀#￀$￀\001\002\000*\002﾿\004k\007﾿\b﾿\n﾿\f﾿\021j\022﾿\023﾿\024﾿\025﾿\026﾿\027﾿\030﾿\031﾿\032﾿\033﾿\034﾿#﾿$﾿\001\002\000F\0041\005I\t9\013C\r\\\0166\017F\0218\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000$\002ￃ\007ￃ\nￃ\fￃ\022ￃ\023ￃ\024ￃ\025ￃ\026ￃ\027ￃ\030ￃ\031ￃ\032ￃ\033ￃ\034ￃ#ￃ$ￃ\001\002\000*\002ﾝ\004ﾝ\007ﾝ\bﾝ\nﾝ\fﾝ\021ﾝ\022ﾝ\023ﾝ\024ﾝ\025ﾝ\026ﾝ\027ﾝ\030ﾝ\031ﾝ\032ﾝ\033ﾝ\034ﾝ#ﾝ$ﾝ\001\002\000J\0041\005I\t9\n\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000,\002ﾕ\004ﾕ\006ﾕ\007ﾕ\bﾕ\nﾕ\fﾕ\021ﾕ\022ﾕ\023ﾕ\024ﾕ\025ﾕ\026ﾕ\027ﾕ\030ﾕ\031ﾕ\032ﾕ\033ﾕ\034ﾕ#ﾕ$ﾕ\001\002\000\006\nﾓ\f\001\002\000\006\nﾏ\fﾏ\001\002\000\004\n\001\002\000,\002ﾔ\004ﾔ\006ﾔ\007ﾔ\bﾔ\nﾔ\fﾔ\021ﾔ\022ﾔ\023ﾔ\024ﾔ\025ﾔ\026ﾔ\027ﾔ\030ﾔ\031ﾔ\032ﾔ\033ﾔ\034ﾔ#ﾔ$ﾔ\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000\004\nﾒ\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000$\002ￋ\007ￋ\nￋ\fￋ\022ￋ\023ￋ\024ￋ\025ￋ\026ￋ\027ￋ\030ￋ\031ￋ\032q\033o\034p#ￋ$ￋ\001\002\000$\002ￌ\007ￌ\nￌ\fￌ\022ￌ\023ￌ\024ￌ\025ￌ\026ￌ\027ￌ\030ￌ\031ￌ\032q\033o\034p#ￌ$ￌ\001\002\000*\002ﾳ\004ﾳ\007ﾳ\bﾳ\nﾳ\fﾳ\021ﾳ\022ﾳ\023ﾳ\024ﾳ\025ﾳ\026ﾳ\027ﾳ\030ﾳ\031ﾳ\032ﾳ\033ﾳ\034ﾳ#ﾳ$ﾳ\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000\032\002ￓ\007ￓ\nￓ\fￓ\022ￓ\023ￓ\024\025\026\027#ￓ$ￓ\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000\036\002ￎ\007ￎ\nￎ\fￎ\022ￎ\023ￎ\024ￎ\025ￎ\026ￎ\027ￎ\030\031#ￎ$ￎ\001\002\000\036\002ￏ\007ￏ\nￏ\fￏ\022ￏ\023ￏ\024ￏ\025ￏ\026ￏ\027ￏ\030\031#ￏ$ￏ\001\002\000\036\002￐\007￐\n￐\f￐\022￐\023￐\024￐\025￐\026￐\027￐\030\031#￐$￐\001\002\000\036\002￑\007￑\n￑\f￑\022￑\023￑\024￑\025￑\026￑\027￑\030\031#￑$￑\001\002\000\032\002ￔ\007ￔ\nￔ\fￔ\022ￔ\023ￔ\024\025\026\027#ￔ$ￔ\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000\016\002￘\007￘\n￘\f￘#￘$\001\002\000H\0041\005I\t9\013C\r\\\0166\017F\0218\031=\032\031\033 \035/\036\034\037K a!b\"e%3&2'5(M)S*^+?,c-Y.U/N0D1`27304W5Z6:\001\002\000\022\002ￖ\007ￖ\nￖ\fￖ\022\023#ￖ$ￖ\001\002\0002\013ﾯ\032ﾯ\033ﾯ\036ﾯ\037ﾯ ﾯ!ﾯ\"ﾯ%ﾯ&ﾯ'ﾯ(ﾯ)ﾯ*ﾯ+ﾯ,ﾯ-ﾯ.ﾯ/ﾯ0ﾯ1ﾯ2ﾯ3ﾯ4ﾯ\001\002\000,\002ﾱ\004ﾱ\006-\007ﾱ\bﾱ\nﾱ\fﾱ\021ﾱ\022ﾱ\023ﾱ\024ﾱ\025ﾱ\026ﾱ\027ﾱ\030ﾱ\031ﾱ\032ﾱ\033ﾱ\034ﾱ#ﾱ$ﾱ\001\002\000*\002ﾲ\004ﾲ\007ﾲ\bﾲ\nﾲ\fﾲ\021ﾲ\022ﾲ\023ﾲ\024ﾲ\025ﾲ\026ﾲ\027ﾲ\030ﾲ\031ﾲ\032ﾲ\033ﾲ\034ﾲ#ﾲ$ﾲ\001\002\000$\002ￅ\007ￅ\nￅ\fￅ\022ￅ\023ￅ\024ￅ\025ￅ\026ￅ\027ￅ\030ￅ\031ￅ\032ￅ\033ￅ\034ￅ#ￅ$ￅ\001\002\000\004\n£\001\002\000,\002ﾛ\004ﾛ\006ﾛ\007ﾛ\bﾛ\nﾛ\fﾛ\021ﾛ\022ﾛ\023ﾛ\024ﾛ\025ﾛ\026ﾛ\027ﾛ\030ﾛ\031ﾛ\032ﾛ\033ﾛ\034ﾛ#ﾛ$ﾛ\001\002\000*\002ﾵ\004k\007ﾵ\bﾵ\nﾵ\fﾵ\021j\022ﾵ\023ﾵ\024ﾵ\025ﾵ\026ﾵ\027ﾵ\030ﾵ\031ﾵ\032ﾵ\033ﾵ\034ﾵ#ﾵ$ﾵ\001\002\000\004\035¦\001\002\000\004\n§\001\002\000,\002ﾊ\004ﾊ\006ﾊ\007ﾊ\bﾊ\nﾊ\fﾊ\021ﾊ\022ﾊ\023ﾊ\024ﾊ\025ﾊ\026ﾊ\027ﾊ\030ﾊ\031ﾊ\032ﾊ\033ﾊ\034ﾊ#ﾊ$ﾊ\001\002\000*\002ﾸ\004k\007ﾸ\bﾸ\nﾸ\fﾸ\021j\022ﾸ\023ﾸ\024ﾸ\025ﾸ\026ﾸ\027ﾸ\030ﾸ\031ﾸ\032ﾸ\033ﾸ\034ﾸ#ﾸ$ﾸ\001\002\000*\002ￜ\004ￜ\007ￜ\bￜ\nￜ\fￜ\021ￜ\022ￜ\023ￜ\024ￜ\025ￜ\026ￜ\027ￜ\030ￜ\031ￜ\032ￜ\033ￜ\034ￜ#ￜ$ￜ\001\002\0002\013￞\032￞\033￞\036￞\037￞ ￞!￞\"￞%￞&￞'￞(￞)￞*￞+￞,￞-￞.￞/￞0￞1￞2￞3￞4￞\001\002\000\004\035¬\001\002\000\004\f­\001\002\000\004\035®\001\002\000\004\n¯\001\002\000\n\002￴\004￴\b￴\021￴\001\002\000\004\035±\001\002\000\004\n²\001\002\000\n\002￵\004￵\b￵\021￵\001\002\000\n\002￬\004￬\b￬\021￬\001\002\0002\013￟\032￟\033￟\036￟\037￟ ￟!￟\"￟%￟&￟'￟(￟)￟*￟+￟,￟-￟.￟/￟0￟1￟2￟3￟4￟\001\002\0004\013\027\016\020\032\031\033 \036\034\037K a!'\")%\r&\f'\016(\036)\037*$+\025,(-#.!/\0350\0301%2\0213\n4\"\001\002\0004\013\027\016\020\032\031\033 \036\034\037K a!'\")%\r&\f'\016(\036)\037*$+\025,(-#.!/\0350\0301%2\0213\n4\"\001\002\000\006\002￱\b￱\001\002\000\006\002￰\b￰\001\002\000\006\002￷\b￷\001\002\000\f\002￩\004￩\006-\b￩\021￩\001\002\000\f\002￫\004￫\006-\b￫\021￫\001\002\000\n\002￪\004￪\b￪\021￪\001\002\000\n\002￨\004￨\b￨\021￨\001\002\0004\013\027\016\020\032\031\033 \036\034\037K a!'\")%\r&\f'\016(\036)\037*$+\025,(-#.!/\0350\0301%2\0213\n4\"\001\002\0004\013\027\016\020\032\031\033 \036\034\037K a!'\")%\r&\f'\016(\036)\037*$+\025,(-#.!/\0350\0301%2\0213\n4\"\001\002\000\006\002￹\b￹\001\002\000\006\002￸\b￸\001\002\000\004\035Ã\001\002\000\004\nÄ\001\002\000\f\002￳\004￳\006￳\b￳\021￳\001\002\000\006\002￻\b￻\001\002\0008\004\013\013\027\016\020\021\023\032\031\033 \036\034\037\033 &!'\")%\r&\f'\016(\036)\037*$+\025,(-#.!/\0350\0301%2\0213\n4\"\001\002\000\004\002�\001\002\000\004\002￿\001\002\000\004\002\001\001\002" });
  
































































































































































































































































































































































































































































































































































































  public short[][] action_table()
  {
    return _action_table;
  }
  
  protected static final short[][] _reduce_table = unpackFromStrings(new String[] { "\000Ç\000\004\003\003\001\001\000\002\001\001\0008\004Ç\006P\bW\tO\nA\013=\fD\r3\016I\017e\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000\026\035\016\036\007\037\006 \031!\025\"\023#*$\b'),\021\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\020 \031!Ä\"\023#*$\b'),\021\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\n ¹#º$\b')\001\001\000\020 \031!¸\"\023#*$\b'),\021\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\006\007+%²\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\006\007+%-\001\001\000\006\007+%¨\001\001\0008\004Z\006P\bW\tO\nA\013=\fD\r3\016I\017e\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\024\tO\026^\027§\030\\\033F\034g'k*@+?\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\024\tO\026^\027£\030\\\033F\034g'k*@+?\001\001\0008\004¡\006P\bW\tO\nA\013=\fD\r3\016I\017e\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000*\006P\bW\tO\020 \021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000\002\001\001\000\002\001\001\000\b\033\034g'k\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\006\007+%\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\006\007+%\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\006't)v\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\020\tm\026^\033F\034g'k*@+?\001\001\000\020\tl\026^\033F\034g'k*@+?\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000*\006P\bW\tO\020s\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000*\006P\bW\tO\020r\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000*\006P\bW\tO\020q\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\024\tO\026^\027|\030\\\033F\034g'k*@+?\001\001\000\024\tO\026^\027{\030\\\033F\034g'k*@+?\001\001\000\002\001\001\000\002\001\001\000(\006P\bW\tO\021U\022;\023Q\024~\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000\002\001\001\000\002\001\001\000<\004\005\006P\bW\tO\nA\013=\fD\r3\016I\017e\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g&'h(N*@+?\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000<\004\005\006P\bW\tO\nA\013=\fD\r3\016I\017e\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g&'h(N*@+?\001\001\000\002\001\001\000,\006P\bW\tO\017\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000,\006P\bW\tO\017\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000\002\001\001\000\002\001\001\000\002\001\001\0000\006P\bW\tO\r\016I\017e\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\0000\006P\bW\tO\r\016I\017e\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000\002\001\001\000.\006P\bW\tO\016\017e\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000.\006P\bW\tO\016\017e\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000.\006P\bW\tO\016\017e\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000.\006P\bW\tO\016\017e\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\0004\006P\bW\tO\013\fD\r3\016I\017e\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000\002\001\001\0002\006P\bW\tO\f\r3\016I\017e\020K\021U\022;\023Q\024c\025S\026^\027f\030\\\031G\032:\033F\034g'h(N*@+?\001\001\000\002\001\001\000\002\001\001\000\006\007+%\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\020 \031!·\"\023#*$\b'),\021\001\001\000\020 \031!¶\"\023#*$\b'),\021\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\006\007+%¼\001\001\000\006\007+%»\001\001\000\002\001\001\000\002\001\001\000\020 \031!À\"\023#*$\b'),\021\001\001\000\020 \031!¿\"\023#*$\b'),\021\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\002\001\001\000\026\035\016\036Æ\037\006 \031!\025\"\023#*$\b'),\021\001\001\000\002\001\001\000\002\001\001\000\002\001\001" });
  












































































  protected CUP.XPathParser.actions action_obj;
  












































































  public short[][] reduce_table()
  {
    return _reduce_table;
  }
  



  protected void init_actions()
  {
    action_obj = new CUP.XPathParser.actions(this);
  }
  






  public Symbol do_action(int act_num, lr_parser parser, Stack stack, int top)
    throws Exception
  {
    return action_obj.CUP$XPathParser$do_action(act_num, parser, stack, top);
  }
  

  public int start_state() { return 0; }
  
  public int start_production() { return 0; }
  
  public int EOF_sym() {
    return 0;
  }
  
  public int error_sym() { return 1; }
  





  public static final Vector EmptyArgs = new Vector(0);
  



  public static final VariableRef DummyVarRef = null;
  


  private Parser _parser;
  


  private XSLTC _xsltc;
  


  private String _expression;
  


  private int _lineNumber = 0;
  

  public SymbolTable _symbolTable;
  

  public XPathParser(Parser parser)
  {
    _parser = parser;
    _xsltc = parser.getXSLTC();
    _symbolTable = parser.getSymbolTable();
  }
  
  public int getLineNumber() {
    return _lineNumber;
  }
  
  public QName getQNameIgnoreDefaultNs(String name) {
    return _parser.getQNameIgnoreDefaultNs(name);
  }
  
  public QName getQName(String namespace, String prefix, String localname) {
    return _parser.getQName(namespace, prefix, localname);
  }
  
  public void setMultiDocument(boolean flag) {
    _xsltc.setMultiDocument(flag);
  }
  
  public void setCallsNodeset(boolean flag) {
    _xsltc.setCallsNodeset(flag);
  }
  
  public void setHasIdCall(boolean flag) {
    _xsltc.setHasIdCall(flag);
  }
  












  public StepPattern createStepPattern(int axis, Object test, Vector predicates)
  {
    if (test == null) {
      int nodeType = axis == 9 ? -1 : axis == 2 ? 2 : 1;
      

      return new StepPattern(axis, nodeType, predicates);
    }
    if ((test instanceof Integer)) {
      int nodeType = ((Integer)test).intValue();
      
      return new StepPattern(axis, nodeType, predicates);
    }
    
    QName name = (QName)test;
    boolean setPriority = false;
    int nodeType;
    int nodeType; if (axis == 9) {
      nodeType = name.toString().equals("*") ? -1 : _xsltc.registerNamespacePrefix(name);
    }
    else
    {
      String uri = name.getNamespace();
      String local = name.getLocalPart();
      QName namespace_uri = _parser.getQNameIgnoreDefaultNs("namespace-uri");
      


      if ((uri != null) && ((local.equals("*")) || (local.equals("@*")))) {
        if (predicates == null) {
          predicates = new Vector(2);
        }
        

        setPriority = predicates.size() == 0;
        
        predicates.add(new Predicate(new EqualityExpr(0, new NamespaceUriCall(namespace_uri), new LiteralExpr(uri))));
      }
      

      int nodeType;
      

      if (local.equals("*")) {
        nodeType = axis == 2 ? 2 : 1;
      } else {
        int nodeType;
        if (local.equals("@*")) {
          nodeType = 2;
        }
        else {
          nodeType = axis == 2 ? _xsltc.registerAttribute(name) : _xsltc.registerElement(name);
        }
      }
    }
    
    StepPattern result = new StepPattern(axis, nodeType, predicates);
    

    if (setPriority) {
      result.setPriority(-0.25D);
    }
    
    return result;
  }
  
  public int findNodeType(int axis, Object test)
  {
    if (test == null) {
      return axis == 9 ? -1 : axis == 2 ? 2 : 1;
    }
    

    if ((test instanceof Integer)) {
      return ((Integer)test).intValue();
    }
    
    QName name = (QName)test;
    
    if (axis == 9) {
      return name.toString().equals("*") ? -1 : _xsltc.registerNamespacePrefix(name);
    }
    

    if (name.getNamespace() == null) {
      String local = name.getLocalPart();
      
      if (local.equals("*")) {
        return axis == 2 ? 2 : 1;
      }
      
      if (local.equals("@*")) {
        return 2;
      }
    }
    
    return axis == 2 ? _xsltc.registerAttribute(name) : _xsltc.registerElement(name);
  }
  










  public Symbol parse(String expression, int lineNumber)
    throws Exception
  {
    try
    {
      _expression = expression;
      _lineNumber = lineNumber;
      return super.parse();
    }
    catch (IllegalCharException e) {
      ErrorMsg err = new ErrorMsg("ILLEGAL_CHAR_ERR", lineNumber, e.getMessage());
      
      _parser.reportError(2, err);
    }
    return null;
  }
  





  final SyntaxTreeNode lookupName(QName name)
  {
    SyntaxTreeNode result = _parser.lookupVariable(name);
    if (result != null) {
      return result;
    }
    return _symbolTable.lookupName(name);
  }
  
  public final void addError(ErrorMsg error) {
    _parser.reportError(3, error);
  }
  
  public void report_error(String message, Object info) {
    ErrorMsg err = new ErrorMsg("SYNTAX_ERR", _lineNumber, _expression);
    
    _parser.reportError(2, err);
  }
  

  public void report_fatal_error(String message, Object info) {}
  
  public RelativeLocationPath insertStep(Step step, RelativeLocationPath rlp)
  {
    if ((rlp instanceof Step)) {
      return new ParentLocationPath(step, (Step)rlp);
    }
    if ((rlp instanceof ParentLocationPath)) {
      ParentLocationPath plp = (ParentLocationPath)rlp;
      RelativeLocationPath newrlp = insertStep(step, plp.getPath());
      return new ParentLocationPath(newrlp, plp.getStep());
    }
    
    addError(new ErrorMsg("INTERNAL_ERR", "XPathParser.insertStep"));
    return rlp;
  }
  





  public boolean isElementAxis(int axis)
  {
    return (axis == 3) || (axis == 2) || (axis == 9) || (axis == 4);
  }
}
