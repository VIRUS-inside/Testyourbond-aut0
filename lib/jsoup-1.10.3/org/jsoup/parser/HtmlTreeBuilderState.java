package org.jsoup.parser;

import java.util.ArrayList;
import org.jsoup.helper.StringUtil;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Element;

 enum HtmlTreeBuilderState
{
  private HtmlTreeBuilderState() {}
  
  Initial, 
  






















  BeforeHtml, 
  



























  BeforeHead, 
  


























  InHead, 
  






































































  InHeadNoscript, 
  



























  AfterHead, 
  

















































  InBody, 
  

























































































































































































































































































































































































































































































































































  Text, 
  

















  InTable, 
  


































































































  InTableText, 
  



































  InCaption, 
  

































  InColumnGroup, 
  





















































  InTableBody, 
  


























































  InRow, 
  



























































  InCell, 
  























































  InSelect, 
  























































































  InSelectInTable, 
  
















  AfterBody, 
  


























  InFrameset, 
  












































  AfterFrameset, 
  






















  AfterAfterBody, 
  














  AfterAfterFrameset, 
  















  ForeignContent;
  





  private static String nullString = String.valueOf('\000');
  
  abstract boolean process(Token paramToken, HtmlTreeBuilder paramHtmlTreeBuilder);
  
  private static boolean isWhitespace(Token t) {
    if (t.isCharacter()) {
      String data = t.asCharacter().getData();
      return isWhitespace(data);
    }
    return false;
  }
  
  private static boolean isWhitespace(String data)
  {
    for (int i = 0; i < data.length(); i++) {
      char c = data.charAt(i);
      if (!StringUtil.isWhitespace(c))
        return false;
    }
    return true;
  }
  
  private static void handleRcData(Token.StartTag startTag, HtmlTreeBuilder tb) {
    tb.insert(startTag);
    tokeniser.transition(TokeniserState.Rcdata);
    tb.markInsertionMode();
    tb.transition(Text);
  }
  
  private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb) {
    tb.insert(startTag);
    tokeniser.transition(TokeniserState.Rawtext);
    tb.markInsertionMode();
    tb.transition(Text);
  }
  

  private static final class Constants
  {
    private static final String[] InBodyStartToHead = { "base", "basefont", "bgsound", "command", "link", "meta", "noframes", "script", "style", "title" };
    private static final String[] InBodyStartPClosers = { "address", "article", "aside", "blockquote", "center", "details", "dir", "div", "dl", "fieldset", "figcaption", "figure", "footer", "header", "hgroup", "menu", "nav", "ol", "p", "section", "summary", "ul" };
    

    private static final String[] Headings = { "h1", "h2", "h3", "h4", "h5", "h6" };
    private static final String[] InBodyStartPreListing = { "pre", "listing" };
    private static final String[] InBodyStartLiBreakers = { "address", "div", "p" };
    private static final String[] DdDt = { "dd", "dt" };
    private static final String[] Formatters = { "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u" };
    private static final String[] InBodyStartApplets = { "applet", "marquee", "object" };
    private static final String[] InBodyStartEmptyFormatters = { "area", "br", "embed", "img", "keygen", "wbr" };
    private static final String[] InBodyStartMedia = { "param", "source", "track" };
    private static final String[] InBodyStartInputAttribs = { "name", "action", "prompt" };
    private static final String[] InBodyStartOptions = { "optgroup", "option" };
    private static final String[] InBodyStartRuby = { "rp", "rt" };
    private static final String[] InBodyStartDrop = { "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr" };
    private static final String[] InBodyEndClosers = { "address", "article", "aside", "blockquote", "button", "center", "details", "dir", "div", "dl", "fieldset", "figcaption", "figure", "footer", "header", "hgroup", "listing", "menu", "nav", "ol", "pre", "section", "summary", "ul" };
    

    private static final String[] InBodyEndAdoptionFormatters = { "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u" };
    private static final String[] InBodyEndTableFosters = { "table", "tbody", "tfoot", "thead", "tr" };
    
    private Constants() {}
  }
}
